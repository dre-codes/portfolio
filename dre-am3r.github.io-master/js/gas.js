//window.market;


/*GLOBAL VARIABLES*/



var market;
var request = new XMLHttpRequest();


request.open("GET", "https://api.myjson.com/bins/s8n1b",false);
request.send();

request = JSON.parse(request.responseText);
//alert(request + "test");
//console.log(request.tables[0].results[0].address_value)

var lat = ["17.983186", "17.984079", "17.975871", "17.945694", "17.975871", "17.983186", "17.984079", "FAILED   ", "17.983186", "17.984079", "17.965989", "17.965989", "17.970743", "17.957438", "17.964963", "FAILED   ", "17.945694", "17.964963", "17.964633", "17.965989", "17.970743", "17.965989", "17.957438", "17.945694", "FAILED   ", "17.964633", "17.965989", "17.970743", "17.964963", "17.965989", "17.957438", "18.350996", "18.446152", "18.446578", "18.445437", "18.440812", "18.350996", "18.446152", "18.440812", "18.446578", "18.445437", "18.446152", "18.446578", "18.440812", "18.445437", "18.350996", "17.999287", "17.993375", "17.971952", "18.012093", "17.982775", "53.759256", "17.987222", "18.073683", "18.002585", "17.996502", "17.996502", "17.996502", "18.033844", "18.012089", "18.012093", "18.027869", "18.045782", "17.952299", "18.007974", "17.970293", "18.020116", "17.998027", "18.012177", "18.015456", "18.012093", "17.979937", "18.020116", "17.965922", "17.967013", "18.028302", "18.029312", "18.002585", "18.026134", "18.007974", "18.025946", "18.026324", "18.002585", "17.996502", "18.020116", "18.041545", "18.041545", "17.951663", "18.000294", "18.020116", "18.041545", "17.999287", "17.993375", "17.987222", "18.0779  ", "18.015482", "17.996502", "17.991464", "17.979937", "17.999287", "17.993375", "17.982775", "17.987222", "18.029239", "17.982775", "53.759256", "17.967013", "17.996502", "17.951663", "17.952299", "18.002585", "18.073683", "17.987276", "FAILED   ", "17.987222", "17.999287", "17.993375", "17.970293", "18.027869", "17.971952", "17.982775", "18.012093", "18.012093", "18.012093", "17.996502", "18.041545", "18.012089", "18.073683", "17.996502", "18.028302", "18.002585", "17.965922", "18.015456", "17.996502", "18.020116", "17.967013", "18.026134", "18.020116", "FAILED   ", "18.0521  ", "17.996502", "18.033844", "17.996502", "18.020116", "18.027869", "17.996502", "18.012093", "18.012093", "18.045782", "17.998027", "18.041545", "18.041545", "18.020116", "18.033844", "18.026324", "18.029312", "18.026134", "18.002585", "18.007974", "18.010888", "18.028302", "18.000294", "17.996502", "18.012093", "18.012093", "18.025946", "18.007974", "18.012177", "18.006721", "18.030775", "17.987276", "18.020116", "18.012089", "18.042757", "18.010888", "17.987276", "18.030775", "18.020116", "17.996502", "18.0521  ", "18.0779  ", "18.020116", "18.015482", "17.979937", "18.020116", "18.020116", "18.020116", "18.020116", "18.002585", "17.996502", "18.073683", "17.967013", "18.00849 ", "17.991464", "18.020116", "17.998027", "18.006721", "18.042757", "18.015456", "18.033844", "18.012089", "18.026134", "18.027869", "18.002585", "18.012093", "18.012093", "18.007974", "18.045782", "18.020116", "18.020116", "17.996502", "17.996502", "FAILED   ", "53.759256", "18.029312", "18.0521  ", "18.041545", "18.020116", "18.041545", "18.010888", "17.965922", "18.012093", "18.012093", "17.952299", "18.012177", "18.00849 ", "18.002585", "18.020116", "18.041545", "18.007974", "18.015482", "18.020116", "18.025946", "17.970293", "18.020116", "18.002585", "18.028302", "18.026324", "18.020116", "18.006721", "18.020116", "17.991464", "18.0779  ", "18.000294", "18.030775", "18.042757", "17.951663", "18.00849 ", "30.799956", "18.034592", "18.017431", "18.036608", "18.017431", "18.046313", "18.168747", "18.173004", "18.042855", "18.046706", "18.017431", "18.046313", "18.031286", "30.799956", "17.990278", "18.168747", "18.034592", "18.017431", "18.173004", "18.036608", "30.799956", "17.990278", "18.046313", "18.042855", "18.046313", "17.990278", "18.017431", "18.031286", "18.046706", "18.036608", "18.031286", "18.034592", "18.017431", "18.046313", "18.173004", "18.046313", "18.046706", "18.168747", "18.097119", "18.171276", "18.178354", "18.181822", "18.178041", "18.232775", "18.181822", "18.097119", "18.178041", "18.171276", "18.178354", "18.232775", "18.181822", "18.178041", "18.171276", "18.097119", "18.232775", "18.178354", "18.171276", "18.334223", "18.324616", "18.432947", "18.425264", "18.436636", "FAILED   ", "18.389459", "18.436636", "18.458202", "18.414271", "18.402948", "18.436636", "18.389459", "18.276095", "18.407634", "18.407389", "18.334223", "18.407254", "18.324616", "18.388711", "18.276095", "18.376891", "18.401449", "18.334223", "18.432947", "18.425264", "18.436636", "18.324616", "18.389459", "18.436636", "FAILED   ", "18.436636", "18.402948", "18.458202", "18.407634", "18.414271", "18.407254", "18.389459", "18.407389", "18.389459", "18.425264", "18.388711", "18.401449", "18.432947", "18.425264", "18.376891", "18.436636", "18.389459", "18.376891", "18.388711", "18.402948", "18.436636", "18.407254", "FAILED   ", "18.414271", "18.436636", "18.458202", "18.407389", "18.401449", "18.407634", "18.00837 ", "17.998693", "18.00837 ", "17.991965", "17.95649 ", "17.949508", "FAILED   ", "17.994119", "17.95058 ", "18.037824", "17.982514", "17.963827", "17.94798 ", "17.961127", "18.00837 ", "17.999077", "17.938251", "18.138271", "17.961127", "17.998693", "17.993326", "18.00837 ", "17.95649 ", "17.963827", "17.949508", "18.002585", "FAILED   ", "17.982514", "17.95649 ", "17.993326", "17.949508", "18.14965 ", "17.997028", "18.105767", "17.95058 ", "17.94798 ", "18.037824", "18.138271", "18.00837 ", "17.991965", "17.999077", "17.994119", "18.138271", "18.00837 ", "17.963827", "17.993326", "17.998693", "18.138271", "17.993326", "FAILED   ", "17.949508", "17.961127", "17.95649 ", "17.938251", "17.982514", "17.963827", "18.002585", "17.994119", "18.138271", "17.997028", "17.999077", "18.105767", "18.00837 ", "18.14965 ", "17.94798 ", "17.994119", "17.95058 ", "18.037824", "18.00837 ", "18.138271", "17.991965", "18.00837 ", "17.993326", "17.993326", "18.002585", "17.938251", "18.138271", "17.997028", "18.138271", "18.105767", "18.14965 ", "18.138271", "FAILED   ", "18.025064", "18.064222", "18.053886", "18.033536", "18.053886", "40.036218", "17.878111", "18.00869 ", "FAILED   ", "18.029873", "18.00869 ", "18.086348", "FAILED   ", "FAILED   ", "18.053886", "18.025064", "18.064222", "18.033536", "40.036218", "FAILED   ", "18.00869 ", "18.00869 ", "18.053886", "18.053886", "18.025064", "18.064222", "18.029873", "18.033536", "18.025064", "18.086348", "FAILED   ", "FAILED   ", "18.215584", "17.878111", "40.036218", "18.053886", "FAILED   ", "18.053886", "18.053886", "18.053886", "17.878111", "18.029873", "18.00869 ", "18.086348", "18.00869 ", "FAILED   ", "18.053886", "18.215584", "18.463859", "18.468609", "18.468609", "18.48054 ", "FAILED   ", "FAILED   ", "18.44153 ", "18.475356", "18.362896", "18.457949", "18.476223", "18.445614", "18.474653", "18.476223", "18.509027", "18.476223", "18.502263", "18.466837", "18.463859", "18.468609", "18.466837", "18.468609", "18.468609", "18.44153 ", "18.476223", "FAILED   ", "18.48054 ", "18.502263", "FAILED   ", "18.445614", "18.474653", "18.475356", "18.476223", "18.463859", "18.468609", "18.44153 ", "18.468609", "FAILED   ", "18.457949", "18.468609", "18.362896", "18.466837", "18.468609", "18.468609", "18.502263", "18.44153 ", "18.476223", "FAILED   ", "18.509027", "18.48054 ", "18.457949", "18.476223", "18.475356", "18.476223", "FAILED   ", "18.509027", "18.474653", "18.445614", "18.362896", "18.502263", "18.476223", "18.476223", "18.509027", "18.476223", "18.476223", "18.26366 ", "18.36536 ", "18.406571", "18.36536 ", "18.272296", "18.403476", "18.362687", "18.326795", "18.388913", "18.272296", "18.270351", "18.36536 ", "18.406571", "18.403476", "18.36536 ", "18.36536 ", "18.326795", "18.388913", "18.270351", "18.362687", "18.406571", "18.403476", "18.36536 ", "18.36536 ", "18.362687", "18.270351", "18.326795", "18.388913", "18.270351", "18.053886", "17.881648", "17.889744", "17.896143", "17.880616", "18.053886", "17.945352", "17.896143", "17.889744", "17.881648", "17.880616", "17.881648", "17.896143", "17.945352", "17.880616", "17.889744", "18.468004", "18.492846", "18.492846", "18.493624", "18.492846", "18.492846", "18.468004", "18.492846", "18.493624", "18.468004", "18.492846", "18.492846", "18.227207", "FAILED   ", "18.222452", "18.310989", "40.364273", "18.229168", "18.268306", "18.301731", "18.272064", "18.227207", "FAILED   ", "18.229168", "FAILED   ", "40.364273", "FAILED   ", "18.222452", "18.310989", "18.268306", "18.272064", "18.301731", "18.310989", "18.227207", "40.364273", "FAILED   ", "18.229168", "18.222452", "FAILED   ", "18.272064", "18.268306", "18.301731"]
    /*coded by andre allen*/
for (i = 0; i < lat.length; i++) {
    request.tables[0].results[i].lat = lat[i];
}


/*coded by andre allen*/
var lon = ["77.359002 ", "-77.250344", " -77.24853", "  -77.1772", " -77.24853", "  -77.3590", " -77.25034", "    FAILED", " -77.35900", "  -77.2503", "-77.239984", " -77.23998", "-77.246049", " -77.22668", "-77.292233", "    FAILED", "-77.177274", " -77.29223", "-77.243389", " -77.23998", "-77.246049", " -77.23998", "-77.226686", " -77.17727", "    FAILED", " -77.24338", "-77.239984", " -77.24604", "-77.292233", " -77.23998", "-77.226686", " -77.97743", "-78.016685", " -78.17227", "-78.172164", " -78.16966", "-77.977434", " -78.01668", "-78.169661", " -78.17227", "-78.172164", " -78.01668", "-78.172275", " -78.16966", "-78.172164", " -77.97743", "-76.796002", " -76.79414", "-76.789528", " -76.79769", "-76.786888", "   -0.3593", " -76.79035", "  -76.7942", "-76.832093", " -76.78922", "-76.789225", " -76.78922", "-76.796053", " -76.79771", "-76.797695", "  -76.7913", "-76.805982", " -76.71935", "-76.811776", " -76.77915", "-76.767423", " -76.80189", "-76.797306", " -76.79844", "-76.797695", "  -76.8182", "-76.767423", " -76.79048", "-76.799385", " -76.81154", "-76.855589", " -76.83209", "-76.839633", " -76.81177", "-76.817837", " -76.82687", "-76.832093", " -76.78922", "-76.767423", " -76.81456", "-76.814564", " -76.72053", " -76.81571", " -76.76742", "-76.814564", " -76.79600", "-76.794149", "  -76.7903", " -76.87642", " -76.74281", "-76.789225", " -76.76611", " -76.81822", " -76.79600", "76.794149 ", "-76.786888", "-76.79035 ", "-76.799297", "76.786888 ", "  -0.35937", "76.799385 ", "-76.789225", "76.720537 ", "-76.719357", "76.832093 ", " -76.79424", "76.771336 ", "    FAILED", "-76.79035 ", "-76.796002", "76.794149 ", "-76.779158", "-76.79137 ", "-76.789528", "76.786888 ", "-76.797695", "76.797695 ", "-76.797695", "76.789225 ", "-76.814564", "76.797713 ", " -76.79424", "76.789225 ", "-76.811545", "76.832093 ", "-76.790484", "76.798445 ", "-76.789225", "76.767423 ", "-76.799385", "76.839633 ", "-76.767423", "   FAILED ", "-76.791072", "76.789225 ", "-76.796053", "76.789225 ", "-76.767423", "-76.79137 ", "-76.789225", "76.797695 ", "-76.797695", "76.805982 ", "-76.801897", "76.814564 ", "-76.814564", "76.767423 ", "-76.796053", "76.826878 ", "-76.855589", "76.839633 ", "-76.832093", "76.811776 ", "-76.755114", "76.811545 ", " -76.81571", "76.789225 ", "-76.797695", "76.797695 ", "-76.817837", "76.811776 ", "-76.797306", "76.789389 ", "-76.774973", "76.771336 ", "-76.767423", "76.797713 ", "-76.820619", "76.755114 ", "-76.771336", "76.774973 ", "-76.767423", "76.789225 ", "-76.791072", "-76.87642 ", "-76.767423", "76.742813 ", " -76.81822", "76.767423 ", "-76.767423", "76.767423 ", "-76.767423", "76.832093 ", "-76.789225", "-76.79424 ", "-76.799385", "76.783016 ", "-76.766117", "76.767423 ", "-76.801897", "76.789389 ", "-76.820619", "76.798445 ", "-76.796053", "76.797713 ", "-76.839633", "-76.79137 ", "-76.832093", "76.797695 ", "-76.797695", "76.811776 ", "-76.805982", "76.767423 ", "-76.767423", "76.789225 ", "-76.789225", "   FAILED ", "  -0.35937", "76.855589 ", "-76.791072", "76.814564 ", "-76.767423", "76.814564 ", "-76.755114", "76.790484 ", "-76.797695", "76.797695 ", "-76.719357", "76.797306 ", "-76.783016", "76.832093 ", "-76.767423", "76.814564 ", "-76.811776", "76.742813 ", "-76.767423", "76.817837 ", "-76.779158", "76.767423 ", "-76.832093", "76.811545 ", "-76.826878", "76.767423 ", "-76.789389", "76.767423 ", "-76.766117", "-76.87642 ", " -76.81571", "76.774973 ", "-76.820619", "76.720537 ", "-76.783016", "81.689826 ", "-77.410667", "77.498304 ", "-77.516927", "77.498304 ", "-77.500182", "77.489531 ", "-77.490273", "77.506914 ", "-77.506683", "77.498304 ", "-77.500182", "-77.50461 ", "-81.689826", "77.569167 ", "-77.489531", "77.410667 ", "-77.498304", "77.490273 ", "-77.516927", "81.689826 ", "-77.569167", "77.500182 ", "-77.506914", "77.500182 ", "-77.569167", "77.498304 ", " -77.50461", "77.506683 ", "-77.516927", "-77.50461 ", "-77.410667", "77.498304 ", "-77.500182", "77.490273 ", "-77.500182", "77.506683 ", "-77.489531", "76.313795 ", "-76.447632", "76.451051 ", "-76.450887", "76.456301 ", "-76.661224", "76.450887 ", "-76.313795", "76.456301 ", "-76.447632", "76.451051 ", "-76.661224", "76.450887 ", "-76.456301", "76.447632 ", "-76.313795", "76.661224 ", "-76.451051", "76.447632 ", "-77.147797", "-77.14564 ", "  -77.1974", "77.175477 ", "-77.203702", "   FAILED ", "-77.372638", "77.203702 ", " -77.39847", "77.070117 ", "-77.101754", "77.203702 ", "-77.372638", "77.116875 ", "-77.105453", "77.103135 ", "-77.147797", "77.103853 ", " -77.14564", "77.368217 ", "-77.116875", "77.366252 ", "-77.361057", "77.147797 ", "  -77.1974", "77.175477 ", "-77.203702", "-77.14564 ", "-77.372638", "77.203702 ", "    FAILED", "77.203702 ", "-77.101754", "-77.39847 ", "-77.105453", "77.070117 ", "-77.103853", "77.372638 ", "-77.103135", "77.372638 ", "-77.175477", "77.368217 ", "-77.361057", " -77.1974 ", "-77.175477", "77.366252 ", "-77.203702", "77.372638 ", "-77.366252", "77.368217 ", "-77.101754", "77.203702 ", "-77.103853", "   FAILED ", "-77.070117", "77.203702 ", " -77.39847", "77.103135 ", "-77.361057", "77.105453 ", " -76.96937", "76.886508 ", " -76.96937", "76.983121 ", "-76.884725", "76.889391 ", "    FAILED", "76.950278 ", "-77.110911", "76.980868 ", "-76.877865", "76.873163 ", "-76.909565", "76.889391 ", " -76.96937", "76.961241 ", "-77.115541", "77.032356 ", "-76.889391", "76.886508 ", "-76.963546", "-76.96937 ", "-76.884725", "76.873163 ", "-76.889391", "76.832093 ", "    FAILED", "76.877865 ", "-76.884725", "76.963546 ", "-76.889391", "77.036091 ", "-76.957255", "77.007505 ", "-77.110911", "76.909565 ", "-76.980868", "77.032356 ", " -76.96937", "76.983121 ", "-76.961241", "76.950278 ", "-77.032356", "-76.96937 ", "-76.873163", "76.963546 ", "-76.886508", "77.032356 ", "-76.963546", "   FAILED ", "-76.889391", "76.889391 ", "-76.884725", "77.115541 ", "-76.877865", "76.873163 ", "-76.832093", "76.950278 ", "-77.032356", "76.957255 ", "-76.961241", "77.007505 ", " -76.96937", "77.036091 ", "-76.909565", "76.950278 ", "-77.110911", "76.980868 ", " -76.96937", "77.032356 ", "-76.983121", "-76.96937 ", "-76.963546", "76.963546 ", "-76.832093", "77.115541 ", "-77.032356", "76.957255 ", "-77.032356", "77.007505 ", "-77.036091", "77.032356 ", "    FAILED", "77.848654 ", "-77.858167", "77.698559 ", "-77.856738", "77.698559 ", "-75.513812", "77.671417 ", " -77.00504", "   FAILED ", " -77.86176", "-77.00504 ", "-77.770956", "   FAILED ", "    FAILED", "77.698559 ", "-77.848654", "77.858167 ", "-77.856738", "75.513812 ", "    FAILED", "-77.00504 ", " -77.00504", "77.698559 ", "-77.698559", "77.848654 ", "-77.858167", "-77.86176 ", "-77.856738", "77.848654 ", "-77.770956", "   FAILED ", "    FAILED", "77.693306 ", "-77.671417", "75.513812 ", "-77.698559", "   FAILED ", "-77.698559", "77.698559 ", "-77.698559", "77.671417 ", " -77.86176", "-77.00504 ", "-77.770956", "-77.00504 ", "    FAILED", "77.698559 ", "-77.693306", "77.905118 ", "-77.919363", "77.919363 ", "-77.901521", "   FAILED ", "    FAILED", "77.930078 ", " -77.92286", "77.923887 ", "-77.933884", "77.893889 ", "-77.896602", "77.917915 ", "-77.893889", "77.862296 ", "-77.893889", "77.914434 ", "-77.906747", "77.905118 ", "-77.919363", "77.906747 ", "-77.919363", "77.919363 ", "-77.930078", "77.893889 ", "    FAILED", "77.901521 ", "-77.914434", "   FAILED ", "-77.896602", "77.917915 ", " -77.92286", "77.893889 ", "-77.905118", "77.919363 ", "-77.930078", "77.919363 ", "    FAILED", "77.933884 ", "-77.919363", "77.923887 ", "-77.906747", "77.919363 ", "-77.919363", "77.914434 ", "-77.930078", "77.893889 ", "    FAILED", "77.862296 ", "-77.901521", "77.933884 ", "-77.893889", "-77.92286 ", "-77.893889", "   FAILED ", "-77.862296", "77.917915 ", "-77.896602", "77.923887 ", "-77.914434", "77.893889 ", "-77.893889", "77.862296 ", "-77.893889", "77.893889 ", "-76.887667", "76.892273 ", "-76.945415", "76.892273 ", "-76.892273", "76.938379 ", "-76.893577", "77.007505 ", "-77.018033", "76.892273 ", "-76.770441", "76.892273 ", "-76.945415", "76.938379 ", "-76.892273", "76.892273 ", "-77.007505", "77.018033 ", "-76.770441", "76.893577 ", "-76.945415", "76.938379 ", "-76.892273", "76.892273 ", "-76.893577", "76.770441 ", "-77.007505", "77.018033 ", "-76.770441", "77.698559 ", "-76.409944", "76.383624 ", "-76.331889", "76.413453 ", "-77.698559", "76.453416 ", "-76.331889", "76.383624 ", "-76.409944", "76.413453 ", "-76.409944", "76.331889 ", "-76.453416", "76.413453 ", "-76.383624", "77.536716 ", "-77.656476", "77.656476 ", "-77.653263", "77.656476 ", "-77.656476", "77.536716 ", "-77.656476", "77.653263 ", "-77.536716", "77.656476 ", "-77.656476", "78.073038 ", "    FAILED", "78.132445 ", "-78.187792", "74.951278 ", " -78.13934", "78.347242 ", "-78.336832", "78.337405 ", "-78.073038", "   FAILED ", " -78.13934", "   FAILED ", "-74.951278", "   FAILED ", "-78.132445", "78.187792 ", "-78.347242", "78.337405 ", "-78.336832", "78.187792 ", "-78.073038", "74.951278 ", "    FAILED", "-78.13934 ", "-78.132445", "   FAILED ", "-78.337405", "78.347242 ", "78.336832 "]
for (i = 0; i < lon.length; i++) {
    request.tables[0].results[i].lon = lon[i];
    //console.log(lon[i]);
}


/* FORMATS THE INFOWINDOW WITH HTML CODE AND VARIABLES FROM THE OBJECT EXAMPLE request.tables[0].results.LOCATION GIVES LOCATION*/
var content = [];
for (i = 0; i < request.tables[0].results.length; i++) {
    content.push('<p> Brand ' + request.tables[0].results[i].market_value + '</p>' + " " + '<p> Address ' + request.tables[0].results[i].address_value + '</p>' + " " + '<p> Gas Type ' + request.tables[0].results[i].fueltype_value + '</p>' + '<p> Price ' + '$' + request.tables[0].results[i].fuelprice_price);

}





var market = [];
for (i = 0; i < request.tables[0].results.length; i++) {



    market.push(request.tables[0].results[i].address_value);

    //console.log(request.tables[0].results);

}

//console.log(market);

var map;

var loc = [];



/*coded by andre allen */

function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 18.0080734, lng: -76.8106558 },
        zoom: 8

    });
    var infowindow = new google.maps.InfoWindow({

    });
    for (i = 0; i < request.tables[0].results.length; i++) {
        lat = parseFloat(request.tables[0].results[i].lat);
        lon = parseFloat(request.tables[0].results[i].lon);
        // console.log(lat);
        var geocoder = new google.maps.Geocoder();
        var myLatLng = { lat: lat, lng: lon };
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            draggable: false,
            title: 'Hello World!'





        });

        marker.setVisible(false);
        /*coded by andre allen*/

        console.log(myLatLng);
        google.maps.event.addListener(marker, 'mouseover', (function(marker, i) {
            return function() {
                infowindow.setContent(content[i]);
                infowindow.open(map, marker);
            }
        })(marker, i));
        /*geocodeAddress(geocoder,map);
        google.maps.event.addListener(marker,'dragend',function(event){

                    document.getElementById("lat").value = event.latLng.lat();
                    document.getElementById("long").value = event.latLng.lng();
                });*/
    }
}


/*for (i=0;i<=market.length;i++) {
    setTimeout( function ge(geocoder,resultsMap) {
            geocoder.geocode( { 'address': market[i]}, function(results, status) {

                if (status == google.maps.GeocoderStatus.OK) { 

                    //create and add marker to map based off geocode result
                    var marker = new google.maps.Marker({  
                        map: resultsMap,
                        title: results[0].formatted_address,
                        position: results[0].geometry.location
                    });

                 } //EDIT, was missing the closing bracket here
            });

    }, i * 1500);
}


THIS FUNCTION LOOPS THRIUGH EVERY Element in the array by a constant variable and grabs its lat and long from google without meeting query limit, this wasn't used as an online batch geocoder used google,bing and other apis which resulted in more accuracy


*/

/*function geocodeAddress(geocoder, resultsMap) {
    for (i=0;i<market.length;i++){
   address = market[i];

   (function(x,i){
  
   setTimeout( function () {
  geocoder.geocode({'address': x}, function(results, status) {
    if (status === google.maps.GeocoderStatus.OK) {

         console.log( "latitude : " + results[0].geometry.location.lat()+"," + " place :" + x + " " +i);
         //console.log(x);
         console.log( "longitude : " + results[0].geometry.location.lng()+","  );
      resultsMap.setCenter(results[0].geometry.location);
      //var lat = result[0].geometry.location.lat();
      //var lng = result[0].geometry.location.lng();
      
    } else {
      alert('Geocode was not successful for the following reason: ' + status);
     console.log( "latitude : ERROR" +" place :" + x + " " +i );
         //console.log(x);
         console.log( "longitude : ERROR" + " place :" + x + " " +i );
    }
  });
},i*1500);

})(address,i);

    
}
}
*/

/*coded by andre allen*/
function loadall() {
    map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 18.0080734, lng: -76.8106558 },
        zoom: 8

    });
    var infowindow = new google.maps.InfoWindow({

    });


    for (i = 0; i < request.tables[0].results.length; i++) {
        lat = parseFloat(request.tables[0].results[i].lat);
        lon = parseFloat(request.tables[0].results[i].lon);
        // console.log(lat);
        var geocoder = new google.maps.Geocoder();
        var myLatLng = { lat: lat, lng: lon };
        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            draggable: false,
            title: 'Hello World!'
        });
        console.log(myLatLng);
        google.maps.event.addListener(marker, 'mouseover', (function(marker, i) {
            return function() {
                infowindow.setContent(content[i]);
                infowindow.open(map, marker);
            }
        })(marker, i));

    }
}



/*geocodeAddress(geocoder,map);
google.maps.event.addListener(marker,'dragend',function(event){

            document.getElementById("lat").value = event.latLng.lat();
            document.getElementById("long").value = event.latLng.lng();
        });*/



function parishes() {
    map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 18.0080734, lng: -76.8106558 },
        zoom: 8

    });
    var infowindow = new google.maps.InfoWindow({

    });
    for (i = 0; i < request.tables[0].results.length; i++) {
        loc.push(request.tables[0].results[i].regionname_value);
        if (loc[i] == document.getElementById('select').value) {

            var parish_lat = parseFloat(request.tables[0].results[i].lat);

            var parish_long = parseFloat(request.tables[0].results[i].lon);

            // console.log(lat);
            var geocoder = new google.maps.Geocoder();
            var myLatLng = { lat: parish_lat, lng: parish_long };
            var marker = new google.maps.Marker({
                position: myLatLng,
                map: map,
                draggable: false,
                title: 'Hello World!'
            });

            console.log(myLatLng);

            console.log(request.tables[0].results[i].regionname_value + parish_lat + " " + parish_long)

            google.maps.event.addListener(marker, 'mouseover', (function(marker, i) {
                return function() {
                    infowindow.setContent(content[i]);
                    infowindow.open(map, marker);
                }
            })(marker, i));

        }
    }
}





/*coded by andre allen*/
